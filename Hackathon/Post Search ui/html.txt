<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CareMeds - Find Your Medication</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #f0f7ff 0%, #e6f2ff 100%);
            color: #2c3e50;
            line-height: 1.6;
            min-height: 100vh;
            overflow-x: hidden;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        /* Header */
        header {
            background: rgba(255, 255, 255, 0.9);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 15px 0;
            position: sticky;
            top: 0;
            z-index: 100;
        }
        
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
            color: #2a9d8f;
            font-weight: 700;
            font-size: 1.5rem;
            text-decoration: none;
        }
        
        .logo-img {
            width: 40px;
            height: 40px;
            background: linear-gradient(120deg, #2a9d8f, #4682b4);
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 20px;
        }
        
        .back-to-search {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #4682b4;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
        }
        
        .back-to-search:hover {
            color: #2a9d8f;
        }
        
        /* Search Results Section */
        .search-results {
            padding: 40px 0;
        }
        
        .results-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }
        
        .results-title {
            font-size: 1.8rem;
            color: #2a9d8f;
        }
        
        .results-count {
            color: #64748b;
            font-size: 1.1rem;
        }
        
        /* Enhanced Sorting System */
        .sorting-system {
            background: white;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 25px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }
        
        .sorting-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .sort-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2a9d8f;
        }
        
        .sort-reset {
            color: #4682b4;
            background: none;
            border: none;
            cursor: pointer;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .sort-reset:hover {
            color: #2a9d8f;
        }
        
        .sort-options {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
        }
        
        .sort-group {
            display: flex;
            flex-direction: column;
            gap: 10px;
            position: relative;
        }
        
        .sort-label {
            font-weight: 600;
            color: #475569;
            font-size: 0.9rem;
        }
        
        .sort-select {
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background: white;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s;
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23475569' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M6 9l6 6 6-6'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-size: 16px;
        }
        
        .sort-select:focus {
            border-color: #2a9d8f;
            outline: none;
            box-shadow: 0 0 0 3px rgba(42, 157, 143, 0.2);
        }
        
        .sort-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 15px;
        }
        
        .sort-tag {
            background: #e0f2fe;
            color: #0369a1;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .sort-tag button {
            background: none;
            border: none;
            color: #0369a1;
            cursor: pointer;
            display: flex;
            align-items: center;
        }
        
        /* Product Grid */
        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
        }
        
        .product-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            transition: all 0.3s;
            border: 1px solid #e2e8f0;
            position: relative;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
        }
        
        .product-header {
            padding: 20px;
            background: linear-gradient(120deg, #2a9d8f, #4682b4);
            color: white;
        }
        
        .product-name {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 5px;
        }
        
        .product-price {
            font-size: 1.5rem;
            font-weight: 700;
        }
        
        .product-info {
            padding: 20px;
        }
        
        .product-details {
            margin-bottom: 20px;
        }
        
        .detail-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            padding-bottom: 10px;
            border-bottom: 1px solid #f1f5f9;
        }
        
        .detail-label {
            color: #64748b;
            font-weight: 500;
        }
        
        .detail-value {
            color: #1e293b;
            font-weight: 600;
        }
        
        .in-stock {
            color: #166534;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .low-stock {
            color: #92400e;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .out-of-stock {
            color: #991b1b;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .product-actions {
            display: flex;
            gap: 10px;
        }
        
        .action-btn {
            flex: 1;
            padding: 12px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            transition: all 0.3s;
        }
        
        .view-btn {
            background: #4682b4;
            color: white;
        }
        
        .view-btn:hover {
            background: #3a6a94;
        }
        
        .wishlist-btn {
            background: #f8fafc;
            color: #64748b;
            border: 1px solid #e2e8f0;
        }
        
        .wishlist-btn:hover, .wishlist-btn.added {
            background: #fee2e2;
            color: #991b1b;
            border-color: #fecaca;
        }
        
        /* Pill animation container */
        .pill-animation-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 9999;
            overflow: hidden;
        }
        
        .falling-pill {
            position: absolute;
            font-size: 20px;
            color: #2a9d8f;
            opacity: 0;
            animation: fallDown 3s linear forwards;
        }
        
        @keyframes fallDown {
            0% {
                transform: translateY(-100px) rotate(0deg);
                opacity: 1;
            }
            90% {
                opacity: 0.8;
            }
            100% {
                transform: translateY(calc(100vh + 50px)) rotate(360deg);
                opacity: 0;
            }
        }
        
        /* Product Detail Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .modal.show {
            display: flex;
        }
        
        .modal-content {
            background: white;
            border-radius: 15px;
            width: 100%;
            max-width: 800px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }
        
        .modal-header {
            padding: 25px 25px 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .modal-title {
            font-size: 1.5rem;
            color: #2a9d8f;
            font-weight: 600;
        }
        
        .close-modal {
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #64748b;
            cursor: pointer;
            transition: color 0.3s;
        }
        
        .close-modal:hover {
            color: #1e293b;
        }
        
        .modal-body {
            padding: 25px;
        }
        
        .modal-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .modal-detail {
            background: #f8fafc;
            padding: 20px;
            border-radius: 10px;
        }
        
        .modal-detail h3 {
            color: #2a9d8f;
            margin-bottom: 15px;
            font-size: 1.1rem;
        }
        
        .detail-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 12px;
            padding-bottom: 12px;
            border-bottom: 1px solid #e2e8f0;
        }
        
        .detail-row:last-child {
            margin-bottom: 0;
            padding-bottom: 0;
            border-bottom: none;
        }
        
        .modal-actions {
            display: flex;
            gap: 15px;
        }
        
        .modal-btn {
            flex: 1;
            padding: 15px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            transition: all 0.3s;
        }
        
        .directions-btn {
            background: #4682b4;
            color: white;
        }
        
        .directions-btn:hover {
            background: #3a6a94;
        }
        
        .pharmacy-btn {
            background: #2a9d8f;
            color: white;
        }
        
        .pharmacy-btn:hover {
            background: #23857a;
        }
        
        /* Alert Popup */
        .alert-popup {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15);
            display: flex;
            align-items: center;
            gap: 15px;
            z-index: 1000;
            transform: translateY(150px);
            transition: transform 0.5s ease-in-out;
            max-width: 350px;
            border-left: 5px solid #2a9d8f;
        }
        
        .alert-popup.show {
            transform: translateY(0);
        }
        
        .alert-popup.removed {
            border-left: 5px solid #fa8072;
        }
        
        .alert-icon {
            width: 40px;
            height: 40px;
            background: #dcfce7;
            color: #166534;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
            font-size: 18px;
        }
        
        .alert-popup.removed .alert-icon {
            background: #fee2e2;
            color: #991b1b;
        }
        
        .alert-content {
            flex-grow: 1;
        }
        
        .alert-title {
            font-weight: 600;
            margin-bottom: 5px;
            color: #1e293b;
        }
        
        .alert-desc {
            color: #64748b;
            font-size: 0.9rem;
            line-height: 1.4;
        }
        
        .alert-close {
            background: none;
            border: none;
            color: #94a3b8;
            cursor: pointer;
            font-size: 18px;
            transition: color 0.3s;
        }
        
        .alert-close:hover {
            color: #64748b;
        }
        
        /* Responsive Design */
        @media (max-width: 768px) {
            .product-grid {
                grid-template-columns: 1fr;
            }
            
            .sort-options {
                grid-template-columns: 1fr;
            }
            
            .modal-details {
                grid-template-columns: 1fr;
            }
            
            .modal-actions {
                flex-direction: column;
            }
            
            .results-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }
            
            .sorting-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }
        }
    </style>
</head>
<body>
    <!-- Pill animation container -->
    <div class="pill-animation-container" id="pillAnimation"></div>
    
    <!-- Header -->
    <header>
        <div class="container">
            <div class="header-content">
                <a href="#" class="logo">
                    <div class="logo-img">C</div>
                    <span>CareMeds</span>
                </a>
                <a href="#" class="back-to-search">
                    <i class="fas fa-arrow-left"></i>
                    Back to Search
                </a>
            </div>
        </div>
    </header>
    
    <!-- Search Results Section -->
    <section class="search-results">
        <div class="container">
            <div class="results-header">
                <h2 class="results-title">Search Results for "Amoxicillin 500mg"</h2>
                <p class="results-count">6 pharmacies found</p>
            </div>
            
            <!-- Enhanced Sorting System -->
            <div class="sorting-system">
                <div class="sorting-header">
                    <h3 class="sort-title">Sort & Filter Results</h3>
                    <button class="sort-reset" id="resetSorting">
                        <i class="fas fa-redo"></i>
                        Reset Filters
                    </button>
                </div>
                
                <div class="sort-options">
                    <div class="sort-group">
                        <label class="sort-label">Sort By</label>
                        <select class="sort-select" id="sortBy">
                            <option value="relevance">Relevance</option>
                            <option value="distance">Distance (Nearest First)</option>
                            <option value="price-asc">Price (Low to High)</option>
                            <option value="price-desc">Price (High to Low)</option>
                            <option value="stock">Stock Availability</option>
                            <option value="rating">Pharmacy Rating</option>
                        </select>
                    </div>
                    
                    <div class="sort-group">
                        <label class="sort-label">Price Range</label>
                        <select class="sort-select" id="priceRange">
                            <option value="all">Any Price</option>
                            <option value="0-10">$0 - $10</option>
                            <option value="10-20">$10 - $20</option>
                            <option value="20-30">$20 - $30</option>
                            <option value="30+">$30+</option>
                        </select>
                    </div>
                    
                    <div class="sort-group">
                        <label class="sort-label">Distance</label>
                        <select class="sort-select" id="distance">
                            <option value="all">Any Distance</option>
                            <option value="0-1">Within 1 mile</option>
                            <option value="1-5">1 - 5 miles</option>
                            <option value="5-10">5 - 10 miles</option>
                            <option value="10+">10+ miles</option>
                        </select>
                    </div>
                    
                    <div class="sort-group">
                        <label class="sort-label">Stock Status</label>
                        <select class="sort-select" id="stockStatus">
                            <option value="all">Any Stock Status</option>
                            <option value="in-stock">In Stock</option>
                            <option value="low-stock">Low Stock</option>
                            <option value="out-of-stock">Out of Stock</option>
                        </select>
                    </div>
                </div>
                
                <div class="sort-tags" id="activeFilters">
                    <!-- Active filters will appear here -->
                </div>
            </div>
            
            <div class="product-grid" id="productGrid">
                <!-- Product cards will be dynamically sorted here -->
            </div>
        </div>
    </section>
    
    <!-- Product Detail Modal -->
    <div class="modal" id="productModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">Product Details</h2>
                <button class="close-modal" onclick="closeModal()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="modal-details">
                    <div class="modal-detail">
                        <h3>Product Information</h3>
                        <div class="detail-row">
                            <span>Medication:</span>
                            <span>Amoxicillin 500mg</span>
                        </div>
                        <div class="detail-row">
                            <span>Dosage Form:</span>
                            <span>Capsules</span>
                        </div>
                        <div class="detail-row">
                            <span>Quantity:</span>
                            <span>30 tablets</span>
                        </div>
                        <div class="detail-row">
                            <span>Price:</span>
                            <span id="detailPrice">$15.99</span>
                        </div>
                    </div>
                    
                    <div class="modal-detail">
                        <h3>Pharmacy Information</h3>
                        <div class="detail-row">
                            <span>Pharmacy:</span>
                            <span id="detailPharmacy">MedPlus</span>
                        </div>
                        <div class="detail-row">
                            <span>Distance:</span>
                            <span id="detailDistance">0.8 miles</span>
                        </div>
                        <div class="detail-row">
                            <span>Address:</span>
                            <span id="detailAddress">123 Main St, Cityville</span>
                        </div>
                        <div class="detail-row">
                            <span>Phone:</span>
                            <span id="detailPhone">(555) 123-4567</span>
                        </div>
                    </div>
                    
                    <div class="modal-detail">
                        <h3>Stock Information</h3>
                        <div class="detail-row">
                            <span>Availability:</span>
                            <span id="detailAvailability" class="in-stock">In Stock (25+)</span>
                        </div>
                        <div class="detail-row">
                            <span>Last Stocked:</span>
                            <span id="detailLastStocked">Today</span>
                        </div>
                        <div class="detail-row">
                            <span>Expected Restock:</span>
                            <span id="detailRestock">N/A</span>
                        </div>
                        <div class="detail-row">
                            <span>Storage:</span>
                            <span>Room Temperature</span>
                        </div>
                    </div>
                </div>
                
                <div class="modal-actions">
                    <button class="modal-btn directions-btn">
                        <i class="fas fa-directions"></i>
                        Get Directions
                    </button>
                    <button class="modal-btn pharmacy-btn">
                        <i class="fas fa-phone"></i>
                        Call Pharmacy
                    </button>
                    <button class="modal-btn wishlist-btn" id="modalWishlist">
                        <i class="fas fa-heart"></i>
                        Add to Wishlist
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Alert Popup -->
    <div class="alert-popup" id="alertPopup">
        <div class="alert-icon">
            <i class="fas fa-check" id="alertIcon"></i>
        </div>
        <div class="alert-content">
            <div class="alert-title" id="alertTitle">Added to Wishlist!</div>
            <div class="alert-desc" id="alertDesc">You'll be notified when this item is back in stock.</div>
        </div>
        <button class="alert-close" onclick="hideAlert()">
            <i class="fas fa-times"></i>
        </button>
    </div>

    <script>
        // Sample product data
        const products = [
            {
                id: 'medplus',
                name: 'Amoxicillin 500mg',
                pharmacy: 'MedPlus',
                price: 15.99,
                distance: 0.8,
                address: '123 Main St, Cityville',
                phone: '(555) 123-4567',
                availability: 'in-stock',
                stockCount: 25,
                lastStocked: 'Today',
                restock: 'N/A',
                rating: 4.5
            },
            {
                id: 'healthmart',
                name: 'Amoxicillin 500mg',
                pharmacy: 'HealthMart',
                price: 12.49,
                distance: 1.2,
                address: '456 Oak Ave, Townsville',
                phone: '(555) 987-6543',
                availability: 'low-stock',
                stockCount: 5,
                lastStocked: '2 days ago',
                restock: 'Tomorrow',
                rating: 4.2
            },
            {
                id: 'cvs',
                name: 'Amoxicillin 500mg',
                pharmacy: 'CVS Pharmacy',
                price: 18.99,
                distance: 2.5,
                address: '789 Elm Blvd, Cityville',
                phone: '(555) 456-7890',
                availability: 'out-of-stock',
                stockCount: 0,
                lastStocked: '5 days ago',
                restock: '3 days',
                rating: 4.7
            },
            {
                id: 'walgreens',
                name: 'Amoxicillin 500mg',
                pharmacy: 'Walgreens',
                price: 14.25,
                distance: 3.1,
                address: '321 Pine St, Villagetown',
                phone: '(555) 765-4321',
                availability: 'in-stock',
                stockCount: 15,
                lastStocked: 'Yesterday',
                restock: 'N/A',
                rating: 4.0
            },
            {
                id: 'riteaid',
                name: 'Amoxicillin 500mg',
                pharmacy: 'Rite Aid',
                price: 22.75,
                distance: 0.5,
                address: '654 Maple Dr, Cityville',
                phone: '(555) 234-5678',
                availability: 'out-of-stock',
                stockCount: 0,
                lastStocked: '1 week ago',
                restock: '5 days',
                rating: 3.8
            },
            {
                id: 'local',
                name: 'Amoxicillin 500mg',
                pharmacy: 'Local Drugstore',
                price: 10.99,
                distance: 1.8,
                address: '987 Cedar Ln, Townsville',
                phone: '(555) 876-5432',
                availability: 'in-stock',
                stockCount: 12,
                lastStocked: 'Today',
                restock: 'N/A',
                rating: 4.8
            }
        ];

        // DOM Elements
        const productGrid = document.getElementById('productGrid');
        const modal = document.getElementById('productModal');
        const alertPopup = document.getElementById('alertPopup');
        const alertTitle = document.getElementById('alertTitle');
        const alertDesc = document.getElementById('alertDesc');
        const alertIcon = document.getElementById('alertIcon');
        const sortSelect = document.getElementById('sortBy');
        const priceRangeSelect = document.getElementById('priceRange');
        const distanceSelect = document.getElementById('distance');
        const stockStatusSelect = document.getElementById('stockStatus');
        const resetSortingBtn = document.getElementById('resetSorting');
        const activeFiltersContainer = document.getElementById('activeFilters');
        const pillAnimationContainer = document.getElementById('pillAnimation');
        const modalWishlistBtn = document.getElementById('modalWishlist');
        
        // Current sorting and filtering state
        let currentSort = 'relevance';
        let currentFilters = {
            priceRange: 'all',
            distance: 'all',
            stockStatus: 'all'
        };
        
        // Wishlist state
        let wishlist = [];
        
        // Initialize the page
        function init() {
            renderProducts(products);
            setupEventListeners();
        }
        
        // Set up event listeners
        function setupEventListeners() {
            sortSelect.addEventListener('change', handleSortingChange);
            priceRangeSelect.addEventListener('change', handleFilterChange);
            distanceSelect.addEventListener('change', handleFilterChange);
            stockStatusSelect.addEventListener('change', handleFilterChange);
            resetSortingBtn.addEventListener('click', resetSorting);
            
            // Modal wishlist button
            modalWishlistBtn.addEventListener('click', function() {
                const pharmacyName = document.getElementById('detailPharmacy').textContent;
                const productId = products.find(p => p.pharmacy === pharmacyName)?.id;
                
                if (productId) {
                    const isAdded = toggleWishlist(productId);
                    updateWishlistButton(this, isAdded);
                    
                    if (isAdded) {
                        showAlert('Added to Wishlist!', 'You\'ll be notified when this item is back in stock.', 'added');
                        createPillAnimation();
                    } else {
                        showAlert('Removed from Wishlist', 'This item has been removed from your wishlist.', 'removed');
                    }
                }
            });
        }
        
        // Handle sorting change
        function handleSortingChange() {
            currentSort = sortSelect.value;
            applySortingAndFiltering();
            updateActiveFilters();
        }
        
        // Handle filter change
        function handleFilterChange(e) {
            const filterType = e.target.id;
            currentFilters[filterType] = e.target.value;
            applySortingAndFiltering();
            updateActiveFilters();
        }
        
        // Apply sorting and filtering
        function applySortingAndFiltering() {
            let filteredProducts = [...products];
            
            // Apply filters
            if (currentFilters.priceRange !== 'all') {
                const [min, max] = currentFilters.priceRange.split('-').map(val => val === '+' ? Infinity : Number(val));
                filteredProducts = filteredProducts.filter(product => {
                    if (max === Infinity) return product.price >= min;
                    return product.price >= min && product.price <= max;
                });
            }
            
            if (currentFilters.distance !== 'all') {
                const [min, max] = currentFilters.distance.split('-').map(val => val === '+' ? Infinity : Number(val));
                filteredProducts = filteredProducts.filter(product => {
                    if (max === Infinity) return product.distance >= min;
                    return product.distance >= min && product.distance <= max;
                });
            }
            
            if (currentFilters.stockStatus !== 'all') {
                filteredProducts = filteredProducts.filter(product => product.availability === currentFilters.stockStatus);
            }
            
            // Apply sorting
            switch(currentSort) {
                case 'distance':
                    filteredProducts.sort((a, b) => a.distance - b.distance);
                    break;
                case 'price-asc':
                    filteredProducts.sort((a, b) => a.price - b.price);
                    break;
                case 'price-desc':
                    filteredProducts.sort((a, b) => b.price - a.price);
                    break;
                case 'stock':
                    // Sort by stock status: in-stock > low-stock > out-of-stock
                    const stockOrder = { 'in-stock': 3, 'low-stock': 2, 'out-of-stock': 1 };
                    filteredProducts.sort((a, b) => stockOrder[b.availability] - stockOrder[a.availability]);
                    break;
                case 'rating':
                    filteredProducts.sort((a, b) => b.rating - a.rating);
                    break;
                case 'relevance':
                default:
                    // Default relevance sorting (combination of factors)
                    filteredProducts.sort((a, b) => {
                        // Prioritize in-stock items
                        const stockOrder = { 'in-stock': 3, 'low-stock': 2, 'out-of-stock': 1 };
                        const stockDiff = stockOrder[b.availability] - stockOrder[a.availability];
                        if (stockDiff !== 0) return stockDiff;
                        
                        // Then by distance
                        const distanceDiff = a.distance - b.distance;
                        if (distanceDiff !== 0) return distanceDiff;
                        
                        // Then by price
                        return a.price - b.price;
                    });
                    break;
            }
            
            // Update results count
            document.querySelector('.results-count').textContent = `${filteredProducts.length} pharmacies found`;
            
            // Render filtered and sorted products
            renderProducts(filteredProducts);
        }
        
        // Update active filters display
        function updateActiveFilters() {
            activeFiltersContainer.innerHTML = '';
            
            // Add sorting tag
            if (currentSort !== 'relevance') {
                const sortText = getSortDisplayText(currentSort);
                activeFiltersContainer.appendChild(createFilterTag(`Sort: ${sortText}`, 'sort'));
            }
            
            // Add filter tags
            if (currentFilters.priceRange !== 'all') {
                const filterText = getFilterDisplayText('priceRange', currentFilters.priceRange);
                activeFiltersContainer.appendChild(createFilterTag(`Price: ${filterText}`, 'priceRange'));
            }
            
            if (currentFilters.distance !== 'all') {
                const filterText = getFilterDisplayText('distance', currentFilters.distance);
                activeFiltersContainer.appendChild(createFilterTag(`Distance: ${filterText}`, 'distance'));
            }
            
            if (currentFilters.stockStatus !== 'all') {
                const filterText = getFilterDisplayText('stockStatus', currentFilters.stockStatus);
                activeFiltersContainer.appendChild(createFilterTag(`Stock: ${filterText}`, 'stockStatus'));
            }
        }
        
        // Create a filter tag
        function createFilterTag(text, type) {
            const tag = document.createElement('div');
            tag.className = 'sort-tag';
            tag.innerHTML = `
                ${text}
                <button onclick="removeFilter('${type}')">
                    <i class="fas fa-times"></i>
                </button>
            `;
            return tag;
        }
        
        // Remove a filter
        function removeFilter(type) {
            if (type === 'sort') {
                sortSelect.value = 'relevance';
                currentSort = 'relevance';
            } else {
                document.getElementById(type).value = 'all';
                currentFilters[type] = 'all';
            }
            
            applySortingAndFiltering();
            updateActiveFilters();
        }
        
        // Reset all sorting and filtering
        function resetSorting() {
            sortSelect.value = 'relevance';
            priceRangeSelect.value = 'all';
            distanceSelect.value = 'all';
            stockStatusSelect.value = 'all';
            
            currentSort = 'relevance';
            currentFilters = {
                priceRange: 'all',
                distance: 'all',
                stockStatus: 'all'
            };
            
            applySortingAndFiltering();
            updateActiveFilters();
        }
        
        // Get display text for sort option
        function getSortDisplayText(sortValue) {
            switch(sortValue) {
                case 'distance': return 'Nearest First';
                case 'price-asc': return 'Price: Low to High';
                case 'price-desc': return 'Price: High to Low';
                case 'stock': return 'Stock Availability';
                case 'rating': return 'Highest Rated';
                default: return 'Relevance';
            }
        }
        
        // Get display text for filter option
        function getFilterDisplayText(filterType, filterValue) {
            switch(filterType) {
                case 'priceRange':
                    switch(filterValue) {
                        case '0-10': return '$0 - $10';
                        case '10-20': return '$10 - $20';
                        case '20-30': return '$20 - $30';
                        case '30+': return '$30+';
                        default: return 'Any Price';
                    }
                case 'distance':
                    switch(filterValue) {
                        case '0-1': return 'Within 1 mile';
                        case '1-5': return '1 - 5 miles';
                        case '5-10': return '5 - 10 miles';
                        case '10+': return '10+ miles';
                        default: return 'Any Distance';
                    }
                case 'stockStatus':
                    switch(filterValue) {
                        case 'in-stock': return 'In Stock';
                        case 'low-stock': return 'Low Stock';
                        case 'out-of-stock': return 'Out of Stock';
                        default: return 'Any Status';
                    }
                default: return '';
            }
        }
        
        // Render products to the grid
        function renderProducts(productsArray) {
            productGrid.innerHTML = '';
            
            if (productsArray.length === 0) {
                productGrid.innerHTML = `
                    <div class="no-results" style="grid-column: 1 / -1; text-align: center; padding: 40px;">
                        <h3>No products found</h3>
                        <p>Try adjusting your filters to see more results.</p>
                    </div>
                `;
                return;
            }
            
            productsArray.forEach(product => {
                const stockText = product.availability === 'in-stock' ? 
                    `In Stock (${product.stockCount}+)` : 
                    product.availability === 'low-stock' ? 
                    `Low Stock (${product.stockCount})` : 
                    'Out of Stock';
                
                const stockClass = product.availability === 'in-stock' ? 'in-stock' : 
                                 product.availability === 'low-stock' ? 'low-stock' : 'out-of-stock';
                
                const isInWishlist = wishlist.includes(product.id);
                                 
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.innerHTML = `
                    <div class="product-header">
                        <div class="product-name">${product.name}</div>
                        <div class="product-price">$${product.price.toFixed(2)}</div>
                    </div>
                    <div class="product-info">
                        <div class="product-details">
                            <div class="detail-item">
                                <span class="detail-label">Pharmacy:</span>
                                <span class="detail-value">${product.pharmacy}</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Distance:</span>
                                <span class="detail-value">${product.distance} miles</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Availability:</span>
                                <span class="detail-value ${stockClass}">
                                    <i class="fas ${product.availability === 'in-stock' ? 'fa-check-circle' : 
                                                  product.availability === 'low-stock' ? 'fa-exclamation-circle' : 'fa-times-circle'}"></i>
                                    ${stockText}
                                </span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Last Stocked:</span>
                                <span class="detail-value">${product.lastStocked}</span>
                            </div>
                        </div>
                        <div class="product-actions">
                            <button class="action-btn view-btn" onclick="openModal('${product.id}')">
                                <i class="fas fa-eye"></i>
                                View Details
                            </button>
                            <button class="action-btn wishlist-btn ${isInWishlist ? 'added' : ''}" onclick="toggleWishlist('${product.id}', this)">
                                <i class="fas fa-heart"></i>
                                ${isInWishlist ? 'Added to Wishlist' : 'Wishlist'}
                            </button>
                        </div>
                    </div>
                `;
                
                productGrid.appendChild(productCard);
            });
        }
        
        // Toggle wishlist status
        function toggleWishlist(productId, button = null) {
            const index = wishlist.indexOf(productId);
            let isAdded = false;
            
            if (index === -1) {
                // Add to wishlist
                wishlist.push(productId);
                isAdded = true;
                
                if (button) {
                    button.classList.add('added');
                    button.innerHTML = '<i class="fas fa-heart"></i> Added to Wishlist';
                }
                
                // Show added notification
                showAlert('Added to Wishlist!', 'You\'ll be notified when this item is back in stock.', 'added');
                
                // Create pill animation
                createPillAnimation();
            } else {
                // Remove from wishlist
                wishlist.splice(index, 1);
                
                if (button) {
                    button.classList.remove('added');
                    button.innerHTML = '<i class="fas fa-heart"></i> Wishlist';
                }
                
                // Show removed notification
                showAlert('Removed from Wishlist', 'This item has been removed from your wishlist.', 'removed');
            }
            
            return isAdded;
        }
        
        // Update wishlist button
        function updateWishlistButton(button, isAdded) {
            if (isAdded) {
                button.classList.add('added');
                button.innerHTML = '<i class="fas fa-heart"></i> Added to Wishlist';
            } else {
                button.classList.remove('added');
                button.innerHTML = '<i class="fas fa-heart"></i> Add to Wishlist';
            }
        }
        
        // Create pill animation
        function createPillAnimation() {
            // Clear previous animations
            pillAnimationContainer.innerHTML = '';
            
            // Create 15 falling pills
            for (let i = 0; i < 15; i++) {
                const pill = document.createElement('div');
                pill.className = 'falling-pill';
                pill.innerHTML = '<i class="fas fa-pills"></i>';
                
                // Random horizontal position
                const left = Math.random() * 100;
                pill.style.left = `${left}%`;
                
                // Random delay
                const delay = Math.random() * 2;
                pill.style.animationDelay = `${delay}s`;
                
                // Random rotation direction
                const rotation = Math.random() > 0.5 ? 360 : -360;
                pill.style.animation = `fallDown 3s ${delay}s linear forwards`;
                
                pillAnimationContainer.appendChild(pill);
            }
            
            // Clear animation after completion
            setTimeout(() => {
                pillAnimationContainer.innerHTML = '';
            }, 5000);
        }
        
        // Show alert
        function showAlert(title, description, type) {
            alertTitle.textContent = title;
            alertDesc.textContent = description;
            
            // Set alert type (added or removed)
            alertPopup.className = 'alert-popup';
            if (type === 'added') {
                alertPopup.classList.add('show');
                alertIcon.className = 'fas fa-check';
            } else if (type === 'removed') {
                alertPopup.classList.add('show', 'removed');
                alertIcon.className = 'fas fa-times';
            }
            
            // Auto hide after 3 seconds
            setTimeout(() => {
                hideAlert();
            }, 3000);
        }
        
        // Hide alert
        function hideAlert() {
            alertPopup.classList.remove('show');
        }
        
        // Open modal with product details
        function openModal(productId) {
            const product = products.find(p => p.id === productId);
            if (product) {
                document.getElementById('detailPrice').textContent = `$${product.price.toFixed(2)}`;
                document.getElementById('detailPharmacy').textContent = product.pharmacy;
                document.getElementById('detailDistance').textContent = `${product.distance} miles`;
                document.getElementById('detailAddress').textContent = product.address;
                document.getElementById('detailPhone').textContent = product.phone;
                
                const stockText = product.availability === 'in-stock' ? 
                    `In Stock (${product.stockCount}+)` : 
                    product.availability === 'low-stock' ? 
                    `Low Stock (${product.stockCount})` : 
                    'Out of Stock';
                
                document.getElementById('detailAvailability').textContent = stockText;
                document.getElementById('detailLastStocked').textContent = product.lastStocked;
                document.getElementById('detailRestock').textContent = product.restock;
                
                // Update availability color
                const availabilityEl = document.getElementById('detailAvailability');
                availabilityEl.className = '';
                if (product.availability === 'in-stock') {
                    availabilityEl.classList.add('in-stock');
                } else if (product.availability === 'low-stock') {
                    availabilityEl.classList.add('low-stock');
                } else {
                    availabilityEl.classList.add('out-of-stock');
                }
                
                // Update modal wishlist button
                const isInWishlist = wishlist.includes(productId);
                updateWishlistButton(modalWishlistBtn, isInWishlist);
                
                modal.classList.add('show');
            }
        }
        
        // Close modal
        function closeModal() {
            modal.classList.remove('show');
        }
        
        // Initialize the page
        init();
    </script>
</body>
</html>